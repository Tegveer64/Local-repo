








/* 1) TRIGGER TO UPDATE CUSTOMER TABLE */

/* FIRST STEP - CREATE AUDIT TABLE TO LOG DATA TO BE UPDATED */

CREATE TABLE my_audit (
      audit_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      table_name       VARCHAR2(255),
      transaction_name VARCHAR2(10),
      by_user          VARCHAR2(30),
      transaction_date DATE,
      old_FirstName     VARCHAR(50) NOT NULL, 
      old_LastName      VARCHAR(50) NOT NULL, 
      old_Address       VARCHAR(50) NOT NULL, 
      old_PhoneN        NUMBER NOT NULL, 
      old_Email         VARCHAR(50) NOT NULL, 
      new_FName         VARCHAR(30) NOT NULL,
      new_LName         VARCHAR(30) NOT NULL,
      new_Address       VARCHAR(30) NOT NULL, 
      new_Phone         NUMBER NOT NULL,
      new_email         VARCHAR(50) NOT NULL
);




/* CREATE TRIGGER */
CREATE OR REPLACE TRIGGER customers_UPDATE_trg
    AFTER 
    UPDATE OR DELETE 
    ON customers
    FOR EACH ROW    
DECLARE
   l_transaction VARCHAR2(10);
BEGIN
   -- determine the transaction type
   l_transaction := CASE  
         WHEN UPDATING THEN 'UPDATE'
         WHEN DELETING THEN 'DELETE'
   END;
   -- insert a row into the audit table   
   INSERT INTO my_audit ( table_name, transaction_name, by_user, transaction_date, old_FirstName, old_LastName, old_Address, old_PhoneN, old_Email, new_FName, new_LName, new_Address, new_Phone, new_email )
                  VALUES( 'WORDS',     l_transaction,    USER,    SYSDATE,           :OLD.custFirstName, :OLD.custLastName, :OLD.custAddress, :OLD.custPhoneN, :OLD.custEmail, :NEW.custFirstName, :NEW.custLastName, :NEW.custAddress, :NEW.custPhoneN, :NEW.custEmail);
END;
/   


/* UPDATE DATA */
UPDATE customers SET custFirstName = 'Riccardo' WHERE custID = 010;
UPDATE customers SET custLastName = 'Reali'   WHERE custID = 010;

/* CHECK NEW DATA IS UPDATED */
SELECT * FROM customers




/* SECOND TRIGGER TO UPDATE PROMOTIONS TABLE */

/* FIRST STEP - CREATE AUDIT TABLE TO LOG DATA TO BE UPDATED */

CREATE TABLE my_audit2 (
      audit_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      table_name       VARCHAR2(255),
      transaction_name VARCHAR2(10),
      by_user          VARCHAR2(30),
      transaction_date DATE,
      old_promotionID  VARCHAR(40) NOT NULL, 
      old_startDate    DATE NOT NULL, 
      old_endDate      DATE NOT NULL, 
      old_description  VARCHAR(250) NOT NULL,
      new_promotionID  VARCHAR(40) NOT NULL, 
      new_startDate    DATE NOT NULL, 
      new_endDate      DATE NOT NULL, 
      new_description  VARCHAR(250) NOT NULL

);




/* CREATE TRIGGER */
CREATE OR REPLACE TRIGGER promotions_UPDATE_trg
    AFTER 
    UPDATE OR DELETE 
    ON promotions
    FOR EACH ROW    
DECLARE
   l_transaction VARCHAR2(10);
BEGIN
   -- determine the transaction type
   l_transaction := CASE  
         WHEN UPDATING THEN 'UPDATE'
         WHEN DELETING THEN 'DELETE'
   END;
   -- insert a row into the audit table   
   INSERT INTO my_audit2 ( table_name, transaction_name, by_user, transaction_date, old_promotionID, old_startDate, old_endDate, old_description, new_promotionID, new_startDate, new_endDate, new_description )
                  VALUES( 'WORDS',     l_transaction,    USER,    SYSDATE,           :OLD.promotionID, :OLD.startDate, :OLD.endDate, :OLD.description, :NEW.promotionID, :NEW.startDate, :NEW.endDate, :NEW.description);
END;
/   



